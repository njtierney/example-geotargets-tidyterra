---
title: "Untitled Draft"
author: "Report Author"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: html
---

```{r}
#| label: setup
knitr::opts_chunk$set(echo = TRUE)
## target knits qmds in their own session, so load libraries here.
source(here::here("packages.R"))
## if you want access to the functions you've written
## lapply(list.files(here::here("./R"), full.names = TRUE), source)
```

```{r}
#| label: load-targets
#| include: false
# tar_load(c(target_1, target_2, target_3))

# # If your chunk output is shown in-line, then you'll need to wrap tar_load()
# # like so:
# 
# withr::with_dir(here::here(), {
#   tar_load(c(target_1, target_2, target_3))
# })
# 
# # This is not needed when using tar_make() to render the document.
```

This should load rastex

```{r}
tar_load(rastex)
rastex
```

This should load rastex_plot - and fail!

```{r}
tar_load(rastex_plot)
rastex_plot
```


This should load plot_rastex_base

```{r}
tar_load(plot_rastex_base)
plot_rastex_base
```

This should do the geom_spatraster call

```{r}
ggplot() +
      geom_spatraster(data = rastex)
```

This should read in the plot from file "geom-spatraster.png":

![](geom-spatraster.png)

## Analysis

## Reproducibility

<details><summary>Reproducibility receipt</summary>

```{r}
## datetime
Sys.time()

## repository
if(requireNamespace('git2r', quietly = TRUE)) {
  git2r::repository()
} else {
  c(
    system2("git", args = c("log", "--name-status", "-1"), stdout = TRUE),
    system2("git", args = c("remote", "-v"), stdout = TRUE)
  )
}

## session info
sessionInfo()
```

</details>
